/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employeedatabase;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xenoc
 */
public class ManageUserForm extends javax.swing.JFrame {
    boolean isAdmin;

    /**
     * Creates new form ManageUserForm
     */
    public ManageUserForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registeruserButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        deleteselectedButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(413, 365));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registeruserButton.setText("Register User");
        registeruserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registeruserButtonActionPerformed(evt);
            }
        });
        getContentPane().add(registeruserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 220, 135, -1));

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });
        getContentPane().add(returnButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 290, 135, -1));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Admin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userTable);
        if (userTable.getColumnModel().getColumnCount() > 0) {
            userTable.getColumnModel().getColumn(0).setResizable(false);
            userTable.getColumnModel().getColumn(1).setResizable(false);
        }
        Connection conn = null;

        try {
            conn = DriverManager.getConnection(DBCredentials.CONN_STRING, DBCredentials.USERNAME, DBCredentials.PASSWORD);
            Statement stmt = conn.createStatement();

            String st = "SELECT access_accounts.username username, access_accounts.isAdmin isAdmin FROM access_accounts";
            ResultSet rs = stmt.executeQuery(st);

            DefaultTableModel model = (DefaultTableModel) userTable.getModel();

            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("username"), rs.getInt("isAdmin") == 1});
            }

            conn.close();
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 200));

        deleteselectedButton.setLabel("Delete User");
        deleteselectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteselectedButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteselectedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 255, 135, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registeruserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registeruserButtonActionPerformed
        RegisterForm registerForm = new RegisterForm();
        registerForm.setLocationRelativeTo(null);
        registerForm.setVisible(true);
        registerForm.isAdmin = isAdmin;
        
        this.dispose();
    }//GEN-LAST:event_registeruserButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        MainPanel mainPanel = new MainPanel();
        mainPanel.setLocationRelativeTo(null);
        mainPanel.setVisible(true);
        mainPanel.isAdmin = isAdmin;
        mainPanel.manageusersButton.setVisible(isAdmin);
        
        this.dispose();
    }//GEN-LAST:event_returnButtonActionPerformed

    private void deleteselectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteselectedButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        int selectedRow = userTable.getSelectedRow();
        
        if (selectedRow < 0) return;
        
        String username = (String) model.getValueAt(selectedRow, 0);
                
        if (username.equals("root")) {            
            JOptionPane.showMessageDialog(null, "You cannot delete the root user!", "Access Denied", JOptionPane.ERROR_MESSAGE);
        
            return;
        }

        Connection conn = null;
        
        try {            
            conn = DriverManager.getConnection(DBCredentials.CONN_STRING, DBCredentials.USERNAME, DBCredentials.PASSWORD);
            Statement stmt = conn.createStatement();
            
            String st = "DELETE FROM `access_accounts` WHERE `access_accounts`.`username` = '" + username + "'";

            stmt.executeUpdate(st);
                        
            conn.close();
                        
            JOptionPane.showMessageDialog(null, "User '" + username + "' deleted!", "User Deleted", JOptionPane.INFORMATION_MESSAGE);
        
            model.removeRow(selectedRow);
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteselectedButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUserForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteselectedButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton registeruserButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
